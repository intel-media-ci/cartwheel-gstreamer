From 8ffb09b9e80191c6fb9362db1db67d87cfcd24d2 Mon Sep 17 00:00:00 2001
From: He Junyan <junyan.he@intel.com>
Date: Thu, 2 Jun 2022 21:18:16 +0800
Subject: [PATCH 5/8] va: enable vah265lpenc for low power mode H265 encoder.

---
 .../gst-plugins-bad/sys/va/gstvah265enc.c     | 46 +++++++++++--------
 1 file changed, 28 insertions(+), 18 deletions(-)

diff --git a/subprojects/gst-plugins-bad/sys/va/gstvah265enc.c b/subprojects/gst-plugins-bad/sys/va/gstvah265enc.c
index a82f9c220e..16c7de0e14 100644
--- a/subprojects/gst-plugins-bad/sys/va/gstvah265enc.c
+++ b/subprojects/gst-plugins-bad/sys/va/gstvah265enc.c
@@ -2444,15 +2444,14 @@ _h265_decide_profile (GstVaH265Enc * self)
       continue;
 
     if (!gst_va_encoder_has_profile_and_entrypoint (base->encoder,
-            profile, VAEntrypointEncSlice))
+            profile, base->entrypoint))
       continue;
 
     if ((rt_format & gst_va_encoder_get_rtformat (base->encoder,
-                profile, VAEntrypointEncSlice)) == 0)
+                profile, base->entrypoint)) == 0)
       continue;
 
     base->profile = profile;
-    base->entrypoint = VAEntrypointEncSlice;
     base->rt_format = rt_format;
     ret = TRUE;
     goto out;
@@ -4128,18 +4127,24 @@ gst_va_h265_enc_class_init (gpointer g_klass, gpointer class_data)
   GstVaEncoder *encoder;
   struct CData *cdata = class_data;
   gchar *long_name;
+  const gchar *name, *desc;
   gint n_props = N_PROPERTIES;
 
-  if (cdata->description) {
-    long_name = g_strdup_printf ("VA-API H.265 Encoder in %s",
-        cdata->description);
+  if (cdata->entrypoint == VAEntrypointEncSlice) {
+    desc = "VA-API based H.265 video encoder";
+    name = "VA-API H.265 Encoder";
   } else {
-    long_name = g_strdup ("VA-API H.265 Encoder");
+    desc = "VA-API based H.265 low power video encoder";
+    name = "VA-API H.265 Low Power Encoder";
   }
 
+  if (cdata->description)
+    long_name = g_strdup_printf ("%s in %s", name, cdata->description);
+  else
+    long_name = g_strdup (name);
+
   gst_element_class_set_metadata (element_class, long_name,
-      "Codec/Encoder/Video/Hardware", "VA-API based H.265 video encoder",
-      "He Junyan <junyan.he@intel.com>");
+      "Codec/Encoder/Video/Hardware", desc, "He Junyan <junyan.he@intel.com>");
 
   sink_doc_caps = gst_caps_from_string (sink_caps_str);
   src_doc_caps = gst_caps_from_string (src_caps_str);
@@ -4470,11 +4475,6 @@ gst_va_h265_enc_register (GstPlugin * plugin, GstVaDevice * device,
   g_return_val_if_fail (entrypoint == VAEntrypointEncSlice ||
       entrypoint == VAEntrypointEncSliceLP, FALSE);
 
-  if (entrypoint == VAEntrypointEncSliceLP) {
-    GST_WARNING ("low power H265 encoder is not supported now.");
-    return FALSE;
-  }
-
   cdata = g_new (struct CData, 1);
   cdata->entrypoint = entrypoint;
   cdata->description = NULL;
@@ -4489,8 +4489,13 @@ gst_va_h265_enc_register (GstPlugin * plugin, GstVaDevice * device,
       GST_MINI_OBJECT_FLAG_MAY_BE_LEAKED);
 
   type_info.class_data = cdata;
-  type_name = g_strdup ("GstVaH265Enc");
-  feature_name = g_strdup ("vah265enc");
+  if (entrypoint == VAEntrypointEncSlice) {
+    type_name = g_strdup ("GstVaH265Enc");
+    feature_name = g_strdup ("vah265enc");
+  } else {
+    type_name = g_strdup ("GstVaH265LPEnc");
+    feature_name = g_strdup ("vah265lpenc");
+  }
 
   /* The first encoder to be registered should use a constant name,
    * like vah265enc, for any additional encoders, we create unique
@@ -4499,8 +4504,13 @@ gst_va_h265_enc_register (GstPlugin * plugin, GstVaDevice * device,
     gchar *basename = g_path_get_basename (device->render_device_path);
     g_free (type_name);
     g_free (feature_name);
-    type_name = g_strdup_printf ("GstVa%sH265Enc", basename);
-    feature_name = g_strdup_printf ("va%sh265enc", basename);
+    if (entrypoint == VAEntrypointEncSlice) {
+      type_name = g_strdup_printf ("GstVa%sH265Enc", basename);
+      feature_name = g_strdup_printf ("va%sh265enc", basename);
+    } else {
+      type_name = g_strdup_printf ("GstVa%sH265LPEnc", basename);
+      feature_name = g_strdup_printf ("va%sh265lpenc", basename);
+    }
     cdata->description = basename;
     /* lower rank for non-first device */
     if (rank > 0)
-- 
2.25.1

